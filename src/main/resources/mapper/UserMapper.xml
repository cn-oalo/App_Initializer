<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.example.domain.entity.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="mobile" property="mobile"/>
        <result column="email" property="email"/>
        <result column="avatar" property="avatar"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, username, password, nickname, mobile, email, avatar, status, create_time, update_time
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE id = #{id}
    </select>

    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE username = #{username}
    </select>

    <insert id="insert" parameterType="com.example.domain.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (
            username, password, nickname, mobile, email, avatar, status, create_time, update_time
        ) VALUES (
            #{username}, #{password}, #{nickname}, #{mobile}, #{email}, #{avatar}, #{status}, #{createTime}, #{updateTime}
        )
    </insert>

    <update id="update" parameterType="com.example.domain.entity.User">
        UPDATE user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="nickname != null">
                nickname = #{nickname},
            </if>
            <if test="mobile != null">
                mobile = #{mobile},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            update_time = #{updateTime}
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <select id="selectList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        ORDER BY create_time DESC
    </select>

    <select id="selectPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectCount" resultType="java.lang.Long">
        SELECT COUNT(*) FROM user
    </select>
</mapper> 